// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wichian.EntityFramework.Core;

namespace Wichian.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Wichian.Core.ERP.APS.Calendar", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("TEXT")
                        .HasComment("开始日期");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT")
                        .HasComment("结束日期");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.HasKey("Id");

                    b.ToTable("aps_calendar");

                    b
                        .HasComment("日历表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Job", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("TEXT")
                        .HasComment("完成时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<long?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProcessFlowId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasComment("开始时间");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProcessFlowId");

                    b.ToTable("aps_job");

                    b
                        .HasComment("生产任务单信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.KeyEvent", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("aps_keyevent");

                    b
                        .HasComment("关键事件信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Order", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT")
                        .HasComment("交期");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER")
                        .HasComment("数量");

                    b.HasKey("Id");

                    b.ToTable("aps_order");

                    b
                        .HasComment("生产订单信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.ProcessFlow", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.HasKey("Id");

                    b.ToTable("aps_processflow");

                    b
                        .HasComment("生产工序流程信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.EquipmentBase", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<long?>("PlanBaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanBaseId");

                    b.ToTable("EquipmentBase");
                });

            modelBuilder.Entity("Wichian.Core.ERP.MaterielBase", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT")
                        .HasComment("型号");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<string>("Norm")
                        .HasColumnType("TEXT")
                        .HasComment("品种规格");

                    b.Property<long?>("PlanBaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanBaseId");

                    b.ToTable("MaterielBase");
                });

            modelBuilder.Entity("Wichian.Core.ERP.PersonBase", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<long?>("PlanBaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanBaseId");

                    b.ToTable("PersonBase");
                });

            modelBuilder.Entity("Wichian.Core.ERP.PlanBase", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("TEXT")
                        .HasComment("开始日期");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasComment("说明");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT")
                        .HasComment("结束日期");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<long?>("PlanBaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanBaseId");

                    b.ToTable("PlanBase");
                });

            modelBuilder.Entity("Wichian.Core.ERP.ProcessBase", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("Barcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("编码");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<string>("IDCardCode")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<long?>("PlanBaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QRCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("RFIDCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlanBaseId");

                    b.ToTable("ProcessBase");
                });

            modelBuilder.Entity("Wichian.Core.Textile.MES.ProductionRecord", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasComment("Id主键");

                    b.Property<string>("ComboCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComboName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreateId")
                        .HasColumnType("INTEGER")
                        .HasComment("创建人");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasComment("创建时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasComment("软删除标记");

                    b.Property<string>("JobNo")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ModifyId")
                        .HasColumnType("INTEGER")
                        .HasComment("修改人");

                    b.Property<DateTimeOffset?>("ModifyTime")
                        .HasColumnType("TEXT")
                        .HasComment("修改时间");

                    b.Property<DateTime>("OccurrenceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("SizeCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SizeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagNo")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductionRecord");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Equipment", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.EquipmentBase");

                    b.ToTable("aps_equipment");

                    b
                        .HasComment("生产设备信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Materiel", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.MaterielBase");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT")
                        .HasComment("生效日期");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT")
                        .HasComment("失效日期");

                    b.Property<bool>("Loss")
                        .HasColumnType("INTEGER")
                        .HasComment("损耗品标记");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER")
                        .HasComment("数量");

                    b.Property<string>("Substitute")
                        .HasColumnType("TEXT")
                        .HasComment("替代物");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasComment("物料类型");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT")
                        .HasComment("重量");

                    b.ToTable("aps_materiel");

                    b
                        .HasComment("物料生产计划信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.BOM.Materiel", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.MaterielBase");

                    b.ToTable("bom_materiel");

                    b
                        .HasComment("物料信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Worker", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.PersonBase");

                    b.ToTable("aps_worker");

                    b
                        .HasComment("工人信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Plan", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.PlanBase");

                    b.ToTable("aps_plan");

                    b
                        .HasComment("生产计划信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Process", b =>
                {
                    b.HasBaseType("Wichian.Core.ERP.ProcessBase");

                    b.Property<long?>("ProcessFlowId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Sequence")
                        .HasColumnType("TEXT");

                    b.HasIndex("ProcessFlowId");

                    b.ToTable("aps_process");

                    b
                        .HasComment("生产工序信息表");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Job", b =>
                {
                    b.HasOne("Wichian.Core.ERP.APS.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Wichian.Core.ERP.APS.ProcessFlow", "ProcessFlow")
                        .WithMany()
                        .HasForeignKey("ProcessFlowId");

                    b.Navigation("Order");

                    b.Navigation("ProcessFlow");
                });

            modelBuilder.Entity("Wichian.Core.ERP.EquipmentBase", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithMany("Equipments")
                        .HasForeignKey("PlanBaseId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.MaterielBase", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithMany("Materiels")
                        .HasForeignKey("PlanBaseId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.PersonBase", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithMany("Staffs")
                        .HasForeignKey("PlanBaseId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.PlanBase", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithMany("Plans")
                        .HasForeignKey("PlanBaseId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.ProcessBase", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithMany("Processes")
                        .HasForeignKey("PlanBaseId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Equipment", b =>
                {
                    b.HasOne("Wichian.Core.ERP.EquipmentBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.APS.Equipment", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Materiel", b =>
                {
                    b.HasOne("Wichian.Core.ERP.MaterielBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.APS.Materiel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wichian.Core.ERP.BOM.Materiel", b =>
                {
                    b.HasOne("Wichian.Core.ERP.MaterielBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.BOM.Materiel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Worker", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PersonBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.APS.Worker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Plan", b =>
                {
                    b.HasOne("Wichian.Core.ERP.PlanBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.APS.Plan", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.Process", b =>
                {
                    b.HasOne("Wichian.Core.ERP.ProcessBase", null)
                        .WithOne()
                        .HasForeignKey("Wichian.Core.ERP.APS.Process", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wichian.Core.ERP.APS.ProcessFlow", null)
                        .WithMany("Processes")
                        .HasForeignKey("ProcessFlowId");
                });

            modelBuilder.Entity("Wichian.Core.ERP.APS.ProcessFlow", b =>
                {
                    b.Navigation("Processes");
                });

            modelBuilder.Entity("Wichian.Core.ERP.PlanBase", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Materiels");

                    b.Navigation("Plans");

                    b.Navigation("Processes");

                    b.Navigation("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
